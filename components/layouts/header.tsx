"use client";

import { Button } from "@/components/ui/button";
import Link from "next/link";
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { useTranslation } from "@/i18n"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ –Ω–∞—à–µ–≥–æ i18n.ts

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
const useAuth = () => {
  // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–∫–∞ —É –Ω–∞—Å –Ω–µ—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
  return {
    user: null, // –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ–±—ã —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤—Ö–æ–¥
    signOut: async () => {
      console.log("Sign out");
    },
  };
};

export function Header({ locale }: { locale: string }) {
  const { t } = useTranslation(locale);
  const { user, signOut } = useAuth();

  return (
    <header className="border-b">
      <div className="container mx-auto px-4 py-3 flex justify-between items-center">
        <div className="flex items-center">
          <Link href={`/${locale}`} className="text-xl font-bold mr-8">
            BetOnIt
          </Link>
          <nav className="hidden md:flex space-x-6">
            <Link href={`/${locale}`} className="hover:text-primary">
              {t("nav.home")}
            </Link>
            <Link href={`/${locale}/events`} className="hover:text-primary">
              {t("nav.events")}
            </Link>
            <Link href={`/${locale}/leaderboard`} className="hover:text-primary">
              {t("nav.leaderboard")}
            </Link>
          </nav>
        </div>

        <div className="flex items-center space-x-4">
          {/* –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–∞ */}
          <DropdownMenu>
            <DropdownMenuTrigger asChild>
              <Button variant="ghost" size="sm">
                {locale === "en" ? "üá∫üá∏ EN" : "üá∑üá∫ RU"}
              </Button>
            </DropdownMenuTrigger>
            <DropdownMenuContent align="end">
              <DropdownMenuItem asChild>
                <Link href={`/en${window.location.pathname.substring(3)}`}>
                  üá∫üá∏ {t("language.english")}
                </Link>
              </DropdownMenuItem>
              <DropdownMenuItem asChild>
                <Link href={`/ru${window.location.pathname.substring(3)}`}>
                  üá∑üá∫ {t("language.russian")}
                </Link>
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>

          {user ? (
            // –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–µ–Ω—é
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Avatar className="h-8 w-8 cursor-pointer">
                  <AvatarImage src={user.avatar_url || ""} alt={user.username || "User"} />
                  <AvatarFallback>
                    {user.username ? user.username[0].toUpperCase() : "U"}
                  </AvatarFallback>
                </Avatar>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem asChild>
                  <Link href={`/${locale}/profile`}>
                    {t("nav.profile")}
                  </Link>
                </DropdownMenuItem>
                <DropdownMenuItem onClick={() => signOut()}>
                  {t("nav.signout")}
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          ) : (
            // –ö–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            <div className="flex space-x-2">
              <Button variant="outline" asChild>
                <Link href={`/${locale}/auth/signin`}>
                  {t("nav.signin")}
                </Link>
              </Button>
              <Button asChild>
                <Link href={`/${locale}/auth/signup`}>
                  {t("nav.signup")}
                </Link>
              </Button>
            </div>
          )}
        </div>
      </div>
    </header>
  );
}